{"version":3,"sources":["CityCard.js","HomePage.js","images/weather.png","images/map.jpeg","images/city.png","NavigationBar.js","CityCardForecast.js","AddUserCity.js","UserCities.js","MapView.js","App.js","reportWebVitals.js","index.js"],"names":["Storage","prototype","setObj","key","obj","this","setItem","JSON","stringify","getObj","parse","getItem","CityCard","city","displayDeleteLink","useState","weatherData","setWeatherData","console","log","useEffect","url","process","fetch","then","res","json","catch","err","error","weather","className","to","name","sys","country","main","temp","description","src","icon","alt","onClick","cityName","toUpperCase","cityArray","localStorage","splice","indexOf","window","location","reload","deleteCity","cityNames","HomePage","map","NavigationBar","logo","title","Map","City","CityCardForecast","match","params","list","parentBoxes","i","childBoxes","j","push","Moment","dt_txt","format","displayWeatherData","AddUserCity","addCity","setCity","onSubmit","e","preventDefault","type","value","required","onChange","target","UserCities","includes","MapView","rel","href","MapContainer","center","zoom","style","height","width","TileLayer","attribution","App","document","path","exact","component","Home","render","routerProps","MapComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6b41f187.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nconst API_KEY = process.env.REACT_APP_API_KEY;\nStorage.prototype.setObj = function(key, obj) {\n    return this.setItem(key, JSON.stringify(obj))\n}\nStorage.prototype.getObj = function(key) {\n    return JSON.parse(this.getItem(key))\n}\n\nconst CityCard = ({  city, displayDeleteLink }) => {\n\tconst [weatherData, setWeatherData] = useState([]);\n    console.log(\"city passed here=\" + city)\n\tuseEffect(() => {\n      \n\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${API_KEY}`;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetWeatherData(res);\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t\n\t}, [city]);\n\n\n\n    \nfunction deleteCity (cityName){\n    console.log(\"Deleted \" + city.toUpperCase());\n    let cityArray = localStorage.getObj('city');\n    cityArray.splice(cityArray.indexOf(cityName),1)\n    console.log(cityArray);\n    localStorage.setObj('city', cityArray);\n    window.location.reload();\n}\n\treturn (\n\t\t<>\n\t\t\t{weatherData.weather ? (\n\t\t\t\t<div className='card' key={city}>\n                    \n\t\t\t\t\t<Link className='link' to={`/forecast/${city}`}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t{weatherData.name}, {weatherData.sys.country}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t<p>{weatherData.main.temp}&deg;F</p>\n\n\t\t\t\t\t\t<p>{weatherData.weather[0].description}</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`} alt = \"weather-icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Link>\n                    {displayDeleteLink ? (<button className = \"deleteBttn\" onClick={() => deleteCity(city)}>Delete city</button>): null }\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n\nexport default CityCard;","import React from 'react';\nimport CityCard from './CityCard';\nimport './App.css';\nlet cityNames = [\n\t'Hong Kong',\n\t'Cairo',\n\t'Edinburgh',\n\t'London',\n\t'New York',\n\t'Boston',\n\t'Moscow',\n\t'Juneau',\n\t'Montevideo',\n\t'Tel Aviv',\n\t'Brussels',\n\t'Cape Town',\n\t'Rome',\n\t'Tokyo',\n\t'Manila',\n\t'Istanbul',\n\t\n\n]; \nconst HomePage = () => {\n\treturn (\n\t\t<div className='cardContainer' >\n\t\t\t{cityNames.map((city) => {\n\t\t\t\treturn <CityCard city={city} key = {city} />;\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/weather.660f4c18.png\";","export default __webpack_public_path__ + \"static/media/map.8f5b2ad6.jpeg\";","export default __webpack_public_path__ + \"static/media/city.6b0dbfbb.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport logo from './images/weather.png';\nimport Star from \"./images/star.png\"\nimport Map from \"./images/map.jpeg\"\nimport City from \"./images/city.png\"\n\n\n\nconst NavigationBar = () => {\n    return (\n\t\t\t<div className='mainNavContainer'>\n\t\t\t\t<Link to='/'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='logo'\n\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\ttitle='Go home'\n\t\t\t\t\t\talt='Sun and Clouds'\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n                <Link to='/map'>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName='map'\n\t\t\t\t\t\tsrc={Map}\n\t\t\t\t\t\ttitle='View Map'\n\t\t\t\t\t\talt='Map Link'\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t\t<div>\n\t\t\t\t\t{/* <h2 className='Nav-title'>City Weather</h2> */}\n\n\t\t\t\t\t<Link className='saved-cities' to='/user_cities'>\n\t\t\t\t\t\t<img className = \"star\" title = \"User Cities\" src = {City} alt=\"favorite-star-icon\"/>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n};\n\nexport default NavigationBar;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Moment from 'moment';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst CityCardForecast = ({ match }) => {\n\tconst [weatherData, setWeatherData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst url = `https://api.openweathermap.org/data/2.5/forecast?q=${match.params.city}&units=imperial&appid=${API_KEY}`;\n\t\tfetch(url)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) => {\n\t\t\t\tsetWeatherData(res);\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}, [match.params.city]);\n\n\tfunction displayWeatherData() {\n\t\tconst parentBoxes = [];\n\n\t\tlet i = 0;\n\t\twhile( i <= 35) {\n\t\t\tlet childBoxes = [];\n\t\t\t\n\t\t\tfor (let j = i ; j <= i + 7; j++) {\n\n\t\t\t\tif((j) % 8 === 0)\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tchildBoxes.push(\n\t\t\t\t\t\t<div className='dateHeader'>\n\t\t\t\t\t\t\tDate: {Moment(weatherData.list[j].dt_txt).format('MM-DD-YYYY')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t); \n\t\t\t\t}\n\t\t\t\tchildBoxes.push(\n\t\t\t\t\t<div className=\"childBox\" >\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<h3> {Moment(weatherData.list[j].dt_txt).format('hh:mm A')}</h3>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\talt = \"weather-icon\" src={`http://openweathermap.org/img/wn/${weatherData.list[j].weather[0].icon}.png`}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<li>Weather: {weatherData.list[j].weather[0].main}</li>\n\t\t\t\t\t\t\t<li>Temp: {weatherData.list[j].main.temp} &deg;F </li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t\n\t\t\t} \n\n\t\t\tparentBoxes.push(<div className='parentBox'>{childBoxes}</div>);\n\t\t\ti = i + 8;\n\t\t} \n\n\t\treturn <div className='boxContainer'>{parentBoxes}</div>;\n\t} \n\t\n\t\n\treturn (\n\t\t<>\n\t\t\t{weatherData.list ? (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"city-header\">\n\t\t\t\t\t\t<h2>5 Day Forecast For {match.params.city}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>{displayWeatherData()}</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t</>\n\t); \n}; \n\nexport default CityCardForecast;","import React, {useState} from 'react';\n\nconst AddUserCity = ({addCity}) => {\n   const [city, setCity] = useState(\"\")\n   const handleSubmit = (e) => {\n       e.preventDefault();\n       addCity(city)\n   }\n    return (\n        <form className=\"saved-form\" onSubmit={handleSubmit}>\n            <label>City Name:</label>\n            <input type=\"text\" value={city} required onChange={(e)=> setCity(e.target.value)}/>\n            <input className='add-city' type=\"submit\" value=\"Add City\" />\n            \n        </form>\n    );\n};\n\nexport default AddUserCity;","import React from 'react';\nimport CityCard from './CityCard';\n\nimport AddUserCity from './AddUserCity';\n\nStorage.prototype.setObj = function(key, obj) {\n    return this.setItem(key, JSON.stringify(obj))\n}\nStorage.prototype.getObj = function(key) {\n    return JSON.parse(this.getItem(key))\n}\n\nconst UserCities = (city) => {\n    \n    \n    \n\n    const addCity = (city) => {\n\n    \n       let cityArray = localStorage.getObj('city');\n        \n        \n        if(cityArray === null){\n            cityArray = [];\n        }\n        \n        \n        if (!cityArray.includes(city.toUpperCase())) {\n\t\t\t\t\tcityArray.push(city.toUpperCase());\n\t\t\t\t\t\n\t\t\t\t\tlocalStorage.setObj('city', cityArray);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n        \n    }//addCity\n\n    \n    let cityArray = localStorage.getObj(\"city\")\n\n    \n\n    return (\n\t\t\t<div>\n\t\t\t\t<AddUserCity addCity={addCity} />\n\t\t\t\t<div className='cardContainer'>\n\t\t\t\t\t{cityArray\n\t\t\t\t\t\t? cityArray.map((city) => {\n\t\t\t\t\t\t\t\treturn <CityCard key = {city} city={city} displayDeleteLink={true} />;\n\t\t\t\t\t\t  })\n\t\t\t\t\t\t: null}\n                    \n\t\t\t\t</div>\n                \n\t\t\t</div>\n\t\t);\n};\n\nexport default UserCities;","import React from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet'\nconst MapView = () => {\n  const defaultPosition  = [44.967243, -103.771556]; \n\n  return (\n    <div className=\"map__container\">\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.2.0/dist/leaflet.css\" />\n<script src=\"https://unpkg.com/leaflet@1.2.0/dist/leaflet.js\"></script>\n      <MapContainer center={defaultPosition} zoom={3} style={{ height: '100vh', width: '100%' }} onClick={(e) => console.log('click')}\n        \n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapView","import { Route } from 'react-router-dom';\nimport React, {  useEffect } from 'react';\nimport Home from './HomePage.js';\nimport './App.css';\nimport NavigationBar from './NavigationBar';\nimport CityCardForecast from './CityCardForecast';\nimport UserCities from './UserCities';\nimport MapComponent from \"./MapView\";\nfunction App() {\nuseEffect(() => {\n\tdocument.title = 'WeatherApp';\n}, []);\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<nav className='topNavBar'>\n\t\t\t\t\t<NavigationBar />\n\t\t\t\t</nav>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<Route path='/' exact component={Home} />\n\n\t\t\t\t<Route\n\t\t\t\t\tpath='/forecast/:city' \n\t\t\t\t\trender={(routerProps) => <CityCardForecast match={routerProps.match} />}\n\t\t\t\t/>\n\t\t\t\t<Route path='/user_cities' component={UserCities} />\n        <Route path =\"/map\" component = {MapComponent}/>\n\t\t\t</main>\n\t\t\t{/* <footer>\n\t\t\t\t<div className='footer'>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<p className='copyright'>Data from OpenWeatherAPI &copy;</p>\n\t\t\t\t</div>\n\t\t\t</footer> */}\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n\nreportWebVitals();"],"sourceRoot":""}